The files starting in CR may be dirty - i.e. they can crash the game for other
reasons than the bug listed and are much larger than required to demonstrate
the error. This because they're raw output from the fuzzer.

CR1-CR4: Garbled metadata or too small board size.
CR5: Duplicator without stats causes getStatIdx to return -1 and thus access
memory outside of bounds.
CR6: DataLen a very high positive number, leading to an out of bounds read.
CR7: DataLen zero leading to a free-without-alloc in RemoveStat (play to 
exercise the bug).
CYCLE0: Transporters and players with cycle 0 crash and hang the game respectively.
TRANSTEP: Transporters with very large xstep,ystep crash the game.
CR8: Too large BoardLen (exceeding the size of the game file).
CR9: Use of a board tile with RLE count 0 causes desynchronization and subsequent crash on cleanup.
CR10: Multi-stage reference DataLen < 0 (i.e. object 1 points at object 2 which points at...)
CR11: The player stats has a data reference (DataLen < 0) to a later object with data. This causes a double free and a crash.
CR12: Number of boards < 0 causes read from unallocated memory. Also (not yet fixed, unknown cause) crash when trying to get board info in editor.
CR13: Loading this in the editor causes a crash related to board length (possible division by zero). Needs further investigation.
COLORS: Range error check as a white on white star color overflows its color, and when a star with P2 stat 0 underflows. Also delayed crashes picking up black keys or touching black doors.
STRANGE: Exercises a lot of centipede out-of-bounds bugs related to stepX and stepY.
